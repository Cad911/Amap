// Generated by CoffeeScript 1.2.1-pre
(function() {

  $.fn.form_plugin = function(optn) {
    var functions, options, _ref, _ref1;
    options = {
      user_id: $('input.user_id').val(),
      table_get_infos: '',
      table_to_update: '',
      champ: (_ref = optn.champ) != null ? _ref : '',
      id_entite_get_infos: '',
      id_entite_update: '',
      element: {
        type: (_ref1 = optn['element']['type']) != null ? _ref1 : 'input',
        options: {
          value: optn['element']['options'] !== void 0 ? optn['element']['options']['value'] : [],
          text: optn['element']['options'] !== void 0 ? optn['element']['options']['text'] : []
        }
      },
      "class": 'string optional',
      button: {
        "class": 'update_titre',
        text_update: 'Modifier le titre'
      }
    };
    functions = {
      input_create: '',
      show_form: function(donnees) {
        var attribut, i, option;
        attribut = {
          hidden_input: {
            balise: 'input',
            id: options.table_to_update + '_id',
            value: donnees[options.table_to_update]['id'],
            size: '50',
            type_input: 'hidden',
            name: options.table + '[id]'
          },
          input: {
            balise: options['element']['type'],
            id: options.table_to_update + '_' + options.champ,
            value: donnees[options['table_to_update']][options['champ']],
            size: '50',
            type_input: 'text',
            name: options.table_to_update + '[' + options.champ + ']',
            "class": 'string optional',
            option: []
          },
          link: {
            "class": 'update_titre',
            text: 'Modifier le titre'
          }
        };
        if (attribut['input']['balise'] === 'select') {
          i = 0;
          while (i < options['element']['options']['value'].length) {
            option = $(document.createElement('option'));
            option.attr('value', options['element']['options']['value'][i]);
            option.text(options['element']['options']['text'][i]);
            if (options['element']['options']['value'][i] === donnees['unite_mesure']['id']) {
              option.attr('selected', 'selected');
            }
            attribut.input.option.push(option);
            i++;
          }
        }
        functions.generate_form(attribut);
        return window.light_box_information.show();
      },
      generate_form: function(attribut) {
        var a, hidden_input, i, input, span, span_annuler, span_infos;
        window.light_box_information.title_header('Titre');
        hidden_input = $(document.createElement(attribut['hidden_input']['balise']));
        hidden_input.attr('id', attribut['hidden_input']['id']);
        hidden_input.attr('name', attribut['hidden_input']['name']);
        hidden_input.val(attribut['hidden_input']['value']);
        hidden_input.attr('type', attribut['hidden_input']['type_input']);
        hidden_input.addClass(attribut['hidden_input']['class']);
        input = $(document.createElement(attribut['input']['balise']));
        input.attr('id', attribut['input']['id']);
        input.attr('name', attribut['input']['name']);
        input.val(attribut['input']['value']);
        input.addClass(attribut['input']['class']);
        if (attribut['input']['balise'] === 'input') {
          input.attr('type', attribut['input']['type_input']);
          input.attr('size', attribut['input']['size']);
        } else if (attribut['input']['balise'] === 'textarea') {
          input.attr('cols', attribut['input']['size']);
        } else if (attribut['input']['balise'] === 'select') {
          i = 0;
          while (i < options['element']['options']['value'].length) {
            input.append(attribut.input.option[i]);
            i++;
          }
        }
        functions.input_create = input;
        window.light_box_information.html_content(input);
        window.light_box_information.append_content(hidden_input);
        if (attribut['span_infos']) {
          span_infos = $(document.createElement('span'));
          span_infos.text(attribut['span_infos']['text']);
          window.light_box_information.append_content(span_infos);
        }
        span = $(document.createElement('span'));
        span.addClass('button');
        a = $(document.createElement('a'));
        a.addClass(attribut['link']['class']);
        a.text(attribut['link']['text']);
        span.append(a);
        span_annuler = window.light_box_information.create_annuler();
        window.light_box_information.html_footer(span_annuler);
        window.light_box_information.append_footer(span);
        return span.on('click', function() {
          return functions.update_information(this);
        });
      },
      get_information: function() {
        var user_id;
        user_id = $('input.user_id').val();
        return $.ajax({
          type: 'GET',
          url: options.the_url_get_infos,
          format: 'json',
          success: function(data) {
            return data;
          }
        });
      },
      update_information: function(button) {
        var champ, data, id_entite, tab_concerned, user_id, val;
        user_id = $('input.user_id').val();
        tab_concerned = options.table_to_update;
        id_entite = options.id_entite_update;
        champ = options.champ;
        val = $(functions.input_create).val();
        data = {};
        data[tab_concerned] = {};
        data[tab_concerned][champ] = val;
        return $.ajax({
          type: 'PUT',
          url: options.the_url_get_infos,
          data: data,
          format: 'json',
          success: function(data) {
            return data;
          }
        });
      }
    };
    return this.each(function() {
      return $(this).bind('click', function() {
        var champ_lvl, i, that;
        if (optn.url_to_update === void 0) optn.url_to_update = optn.url_get_infos;
        options.table_get_infos = optn.url_get_infos[optn.url_get_infos.length - 1];
        options.table_to_update = optn.url_to_update[optn.url_to_update.length - 1];
        console.log(optn.url_get_infos);
        options.id_entite_get_infos = $(this).parents('div').prevAll('div.informations_card').children('input.id_' + options.table_get_infos).val();
        options.id_entite_update = $(this).parents('div').prevAll('div.informations_card').children('input.id_' + options.table_to_update).val();
        console.log(options);
        options.the_url_get_infos = '/administration';
        options.the_url_to_update = '/administration';
        if (optn.url_get_infos !== void 0) {
          options.url_get_infos = {};
          i = 0;
          while (i < optn.url_get_infos.length) {
            champ_lvl = 'level_' + i;
            options.url_get_infos[champ_lvl] = optn.url_get_infos[i];
            if (i === 0) {
              options.the_url_get_infos += '/' + optn.url_get_infos[i] + 's/' + options.user_id;
            } else {
              options.the_url_get_infos += '/' + optn.url_get_infos[i] + 's/' + options.id_entite_get_infos;
            }
            i++;
          }
        }
        options.url_to_update = {};
        i = 0;
        while (i < optn.url_to_update.length) {
          champ_lvl = 'level_' + i;
          options.url_to_update[champ_lvl] = optn.url_to_update[i];
          if (i === 0) {
            options.the_url_to_update += '/' + optn.url_to_update[i] + 's/' + options.user_id;
          } else {
            options.the_url_to_update += '/' + optn.url_to_update[i] + 's/' + options.id_entite_to_update;
          }
          i++;
        }
        that = this;
        return $.when(functions.get_information()).done(function(data) {
          return functions.show_form(data);
        });
      });
    });
  };

}).call(this);
