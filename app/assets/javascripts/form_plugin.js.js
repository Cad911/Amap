// Generated by CoffeeScript 1.2.1-pre
(function() {

  $.fn.form_plugin = function(optn) {
    var champ, champ_opt, functions, options, valeur, _ref, _ref1, _ref2, _ref3;
    options = {
      user_id: $('input.user_id').val(),
      table_get_infos: '',
      table_to_update: '',
      champ: [],
      id_entite_get_infos: '',
      id_entite_update: '',
      element: {
        type: (_ref = optn['element']['type']) != null ? _ref : 'input',
        options: {
          value: optn['element']['options'] !== void 0 ? optn['element']['options']['value'] : [],
          text: optn['element']['options'] !== void 0 ? optn['element']['options']['text'] : []
        }
      },
      "class": 'string optional',
      button: {
        "class": optn['button'] !== void 0 ? (_ref1 = optn['button']['class']) != null ? _ref1 : 'update_element' : 'update_element',
        text_update: optn['button'] !== void 0 ? (_ref2 = optn['button']['text_update']) != null ? _ref2 : 'Modifier' : 'Modifier'
      },
      callback: (_ref3 = optn.callback) != null ? _ref3 : null
    };
    champ_opt = optn['champ'].split(',');
    for (champ in champ_opt) {
      valeur = champ_opt[champ];
      options.champ.push($.trim(valeur));
    }
    functions = {
      input_create: [],
      show_form: function(donnees) {
        var attribut, attribut_input, champ, i, option, valeur_champ, _ref4;
        attribut = {
          hidden_input: {
            balise: 'input',
            id: options.table_to_update + '_id',
            value: donnees[options.table_to_update]['id'],
            size: '50',
            type_input: 'hidden',
            name: options.table + '[id]'
          },
          link: {
            "class": options.button["class"],
            text: options.button.text_update
          },
          input: []
        };
        _ref4 = options.champ;
        for (champ in _ref4) {
          valeur_champ = _ref4[champ];
          attribut_input = {
            balise: options['element']['type'],
            id: options.table_to_update + '_' + valeur_champ,
            value: donnees[options['table_to_update']][valeur_champ],
            size: '50',
            type_input: 'text',
            name: options.table_to_update + '[' + valeur_champ + ']',
            "class": 'string optional',
            option: []
          };
          attribut['input'].push(attribut_input);
          if (attribut_input['balise'] === 'select') {
            attribut.input[champ].option = [];
            i = 0;
            while (i < options['element']['options']['value'].length) {
              option = $(document.createElement('option'));
              option.attr('value', options['element']['options']['value'][i]);
              option.text(options['element']['options']['text'][i]);
              if (options['element']['options']['value'][i] === donnees[options.table_to_update][valeur_champ]) {
                option.attr('selected', 'selected');
              }
              attribut.input[champ].option.push(option);
              i++;
            }
          }
        }
        functions.generate_form(attribut);
        return window.light_box_information.show();
      },
      generate_form: function(attribut) {
        var a, champ, hidden_input, i, input, span, span_annuler, span_infos, valeur, _ref4;
        window.light_box_information.html_content('');
        window.light_box_information.title_header('Titre');
        hidden_input = $(document.createElement(attribut['hidden_input']['balise']));
        hidden_input.attr('id', attribut['hidden_input']['id']);
        hidden_input.attr('name', attribut['hidden_input']['name']);
        hidden_input.val(attribut['hidden_input']['value']);
        hidden_input.attr('type', attribut['hidden_input']['type_input']);
        hidden_input.addClass(attribut['hidden_input']['class']);
        _ref4 = attribut['input'];
        for (champ in _ref4) {
          valeur = _ref4[champ];
          input = $(document.createElement(valeur['balise']));
          input.attr('id', valeur['id']);
          input.attr('name', valeur['name']);
          input.val(valeur['value']);
          input.addClass(valeur['class']);
          if (valeur['balise'] === 'input') {
            input.attr('type', valeur['type_input']);
            input.attr('size', valeur['size']);
          } else if (valeur['balise'] === 'textarea') {
            input.attr('cols', valeur['size']);
          } else if (valeur['balise'] === 'select') {
            i = 0;
            while (i < options['element']['options']['value'].length) {
              input.append(valeur.option[i]);
              i++;
            }
          }
          functions.input_create.push(input);
          window.light_box_information.append_content(input);
        }
        window.light_box_information.append_content(hidden_input);
        if (attribut['span_infos']) {
          span_infos = $(document.createElement('span'));
          span_infos.text(attribut['span_infos']['text']);
          window.light_box_information.append_content(span_infos);
        }
        span = $(document.createElement('span'));
        span.addClass('button');
        a = $(document.createElement('a'));
        a.addClass(attribut['link']['class']);
        a.text(attribut['link']['text']);
        span.append(a);
        span_annuler = window.light_box_information.create_annuler();
        window.light_box_information.html_footer(span_annuler);
        window.light_box_information.append_footer(span);
        return span.on('click', function() {
          return functions.update_information(this);
        });
      },
      get_information: function() {
        var user_id;
        user_id = $('input.user_id').val();
        return $.ajax({
          type: 'GET',
          url: options.the_url_get_infos,
          format: 'json',
          complete: function(data) {
            var informations;
            informations = $.parseJSON(data['responseText']);
            if (informations['status'] === 'OK') {
              return informations;
            } else {
              return alert(informations['error']);
            }
          }
        });
      },
      update_information: function(button) {
        var champ, data, id_entite, tab_concerned, user_id, val, valeur, value_to_show, _ref4, _results;
        user_id = $('input.user_id').val();
        value_to_show = '';
        _ref4 = functions.input_create;
        _results = [];
        for (champ in _ref4) {
          valeur = _ref4[champ];
          tab_concerned = options.table_to_update;
          id_entite = options.id_entite_update;
          champ = options.champ[champ];
          val = $(valeur).val();
          data = {};
          data[tab_concerned] = {};
          data[tab_concerned][champ] = val;
          value_to_show += ' ' + val;
          _results.push($.ajax({
            type: 'PUT',
            url: options.the_url_to_update,
            data: data,
            format: 'json',
            complete: function(data) {
              var informations;
              informations = $.parseJSON(data['responseText']);
              if (informations['status'] === 'OK') {
                if (options.element.type === 'select') {
                  $(options.element_clicked).text($(valeur).children("option[value='" + val + "']").text());
                } else {
                  $(options.element_clicked).text($.trim(value_to_show));
                }
                window.light_box_information.hide();
                return $(options.element_clicked).trigger('end_form_plugin');
              } else {
                return alert(informations['error']);
              }
            }
          }));
        }
        return _results;
      }
    };
    return this.each(function() {
      return $(this).bind('click', function() {
        var champ_lvl, i, that;
        options.element_clicked = this;
        if (optn.url_to_update === void 0) optn.url_to_update = optn.url_get_infos;
        options.table_get_infos = optn.url_get_infos[optn.url_get_infos.length - 1];
        options.table_to_update = optn.url_to_update[optn.url_to_update.length - 1];
        options.id_entite_get_infos = $(this).parents('div').prevAll('div.informations_card').children('input.id_' + options.table_get_infos).val();
        options.id_entite_update = $(this).parents('div').prevAll('div.informations_card').children('input.id_' + options.table_to_update).val();
        options.the_url_get_infos = '/administration';
        options.the_url_to_update = '/administration';
        if (optn.url_get_infos !== void 0) {
          options.url_get_infos = {};
          i = 0;
          while (i < optn.url_get_infos.length) {
            champ_lvl = 'level_' + i;
            options.url_get_infos[champ_lvl] = optn.url_get_infos[i];
            if (i === 0) {
              options.the_url_get_infos += '/' + optn.url_get_infos[i] + 's/' + options.user_id;
            } else {
              options.the_url_get_infos += '/' + optn.url_get_infos[i] + 's/' + options.id_entite_get_infos;
            }
            i++;
          }
        }
        options.url_to_update = {};
        i = 0;
        while (i < optn.url_to_update.length) {
          champ_lvl = 'level_' + i;
          options.url_to_update[champ_lvl] = optn.url_to_update[i];
          if (i === 0) {
            options.the_url_to_update += '/' + optn.url_to_update[i] + 's/' + options.user_id;
          } else {
            options.the_url_to_update += '/' + optn.url_to_update[i] + 's/' + options.id_entite_update;
          }
          i++;
        }
        that = this;
        $.when(functions.get_information()).done(function(data) {
          return functions.show_form(data);
        });
        return this;
      });
    });
  };

}).call(this);
