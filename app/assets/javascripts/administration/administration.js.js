// Generated by CoffeeScript 1.2.1-pre
(function() {

  $(window).load(function() {
    var listing_tooltip;
    listing_tooltip = {
      listing: function() {
        return $('.historique,.edit,.delete').tool_tip(1000);
      }
    };
    return listing_tooltip.listing();
  });

  $(document).ready(function() {
    var card, menu;
    $('.card h2.title').form_plugin({
      table_get_infos: 'stock',
      champ: 'titre',
      element: {
        type: 'input',
        options: {
          value: [1, 2],
          text: ["Kilos", "grammes"]
        }
      }
    });
    $('.card p.description').form_plugin({
      table_get_infos: 'stock',
      champ: 'description',
      element: {
        type: 'textarea'
      }
    });
    $('.card li.prix').form_plugin({
      table_get_infos: 'stock',
      table_to_update: 'produit_vente_libre',
      champ: 'prix_unite_ttc',
      element: {
        type: 'input'
      }
    });
    $('.card li.unite_mesure').form_plugin({
      table_get_infos: 'stock',
      champ: 'unite_mesure_id',
      element: {
        type: 'select',
        options: {
          value: [1, 2],
          text: ["Kilos", "grammes"]
        }
      }
    });
    $('.card li.quantite_lot').form_plugin({
      table_get_infos: 'stock',
      table_to_update: 'produit_vente_libre',
      champ: 'quantite',
      element: {
        type: 'input'
      }
    });
    $('.card li.nombre_pack').form_plugin({
      table_get_infos: 'stock',
      table_to_update: 'produit_vente_libre',
      champ: 'nombre_pack',
      element: {
        type: 'input'
      }
    });
    $('.card li.stock_total').form_plugin({
      table_get_infos: 'stock',
      champ: 'quantite',
      element: {
        type: 'input'
      }
    });
    console.log($('.card li.unite_mesure').parent('div').prevAll('div.informations_card').children('input.id_stock').val());
    menu = {
      hover_action: function() {
        $('.subnav').each(function() {
          if (!$(this).hasClass('subnav_isopen')) {
            return $(this).css({
              'margin-top': '-105px',
              'position': 'relative',
              'opacity': 0,
              'z-index': 1
            });
          }
        });
        $('.pannels>li').css({
          'position': 'relative',
          'z-index': 2
        });
        return $('li.stock').bind('click', function() {
          if ($('.subnav').hasClass('subnav_isopen')) {
            $('.subnav').animate({
              'marginTop': '-105px',
              'opacity': 0
            }, 1000);
            return $('.subnav').removeClass('subnav_isopen');
          } else {
            $('.subnav').animate({
              'marginTop': '0px',
              'opacity': 1
            }, 1000);
            return $('.subnav').addClass('subnav_isopen');
          }
        });
      }
    };
    menu.hover_action();
    card = {
      event: function() {},
      show_form: function(intitule, donnees, element) {
        var attribut;
        attribut = {};
        switch (intitule) {
          case 'title':
            window.light_box_information.title_header('Titre');
            attribut = {
              hidden_input: {
                balise: 'input',
                id: 'stock_id',
                value: donnees['stock']['id'],
                size: '50',
                type_input: 'hidden',
                name: 'stock[id]'
              },
              input: {
                balise: 'input',
                id: 'stock_titre',
                value: donnees['stock']['titre'],
                size: '50',
                type_input: 'text',
                name: 'stock[titre]',
                "class": 'string optional'
              },
              link: {
                "class": 'update_titre',
                text: 'Modifier le titre'
              }
            };
            console.log(donnees);
            card.generate_form(attribut);
            return window.light_box_information.show();
          case 'description':
            window.light_box_information.title_header('Description');
            attribut = {
              hidden_input: {
                balise: 'input',
                id: 'stock_id',
                value: donnees['stock']['id'],
                size: '50',
                type_input: 'hidden',
                name: 'stock[id]'
              },
              input: {
                balise: 'textarea',
                id: 'stock_description',
                value: donnees['stock']['description'],
                size: '40',
                type_input: '',
                name: 'stock[description]',
                "class": 'text optional'
              },
              link: {
                "class": 'update_description',
                text: 'Modifier la description'
              }
            };
            card.generate_form(attribut);
            return window.light_box_information.show();
          case 'prix':
            window.light_box_information.title_header('Prix');
            attribut = {
              hidden_input: {
                balise: 'input',
                id: 'produit_vente_libre_id',
                value: donnees['produit_vente_libre']['id'],
                size: '50',
                type_input: 'hidden',
                name: 'produit_vente_libre[id]'
              },
              input: {
                balise: 'input',
                id: 'produit_vente_libre_prix_unite_ttc',
                value: donnees['produit_vente_libre']['prix_unite_ttc'],
                type_input: 'text',
                name: 'produit_vente_libre[prix_unite_ttc]',
                "class": 'numerical optional'
              },
              link: {
                "class": 'update_prix_unite_ttc',
                text: 'Modifier le prix'
              }
            };
            card.generate_form(attribut);
            return window.light_box_information.show();
          case 'unite_mesure':
            window.light_box_information.title_header('Unité de mesure');
            return $.ajax({
              type: 'POST',
              url: '/administration/users/1/get_unite_mesure',
              format: "json",
              success: function(data) {
                var champ, option, options, value;
                options = [];
                for (champ in data) {
                  value = data[champ];
                  option = $(document.createElement('option'));
                  option.attr('value', value['id']);
                  option.text(value['nom']);
                  if (value['nom'] === donnees['unite_mesure']['nom']) {
                    option.attr('selected', 'selected');
                  }
                  options.push(option);
                }
                attribut = {
                  hidden_input: {
                    balise: 'input',
                    id: 'stock_id',
                    value: donnees['stock']['id'],
                    size: '50',
                    type_input: 'hidden',
                    name: 'stock[id]'
                  },
                  input: {
                    balise: 'select',
                    id: 'stock_unite_mesure_id',
                    value: donnees['unite_mesure']['nom'],
                    type_input: 'text',
                    name: 'stock[unite_mesure_id]',
                    "class": 'numerical optional',
                    options: options
                  },
                  link: {
                    "class": 'update_unite_mesure',
                    text: 'Modifier l\'unite'
                  }
                };
                card.generate_form(attribut);
                return window.light_box_information.show();
              }
            });
          case 'quantite_lot':
            window.light_box_information.title_header('Quantité lot');
            attribut = {
              hidden_input: {
                balise: 'input',
                id: 'produit_vente_libre_id',
                value: donnees['produit_vente_libre']['id'],
                size: '50',
                type_input: 'hidden',
                name: 'produit_vente_libre[id]'
              },
              input: {
                balise: 'input',
                id: 'produit_vente_libre_quantite',
                value: donnees['produit_vente_libre']['quantite'],
                type_input: 'text',
                name: 'produit_vente_libre[quantite]',
                "class": 'numerical optional'
              },
              link: {
                "class": 'update_quantite',
                text: 'Modifier la quantité d\'un lot '
              },
              span_infos: {
                text: '(' + donnees['unite_mesure']['nom'] + ')'
              }
            };
            card.generate_form(attribut);
            return window.light_box_information.show();
          case 'nombre_pack':
            window.light_box_information.title_header('Quantité lot en rayon');
            attribut = {
              hidden_input: {
                balise: 'input',
                id: 'stock_id',
                value: donnees['stock']['id'],
                size: '50',
                type_input: 'hidden',
                name: 'stock[id]'
              },
              input: {
                balise: 'input',
                id: 'produit_vente_libre_nombre_pack',
                value: donnees['produit_vente_libre']['nombre_pack'],
                type_input: 'text',
                name: 'produit_vente_libre[nombre_pack]',
                "class": 'numerical optional'
              },
              link: {
                "class": 'update_nombre_pack',
                text: 'Modifier le nombre de lot'
              },
              span_infos: {
                text: 'sur ' + donnees['produit_vente_libre']['lot_possible_max'] + ' (possible)'
              }
            };
            card.generate_form(attribut);
            return window.light_box_information.show();
          case 'stock_total':
            window.light_box_information.title_header('Quantité du stock');
            attribut = {
              hidden_input: {
                balise: 'input',
                id: 'stock_id',
                value: donnees['stock']['id'],
                size: '50',
                type_input: 'hidden',
                name: 'stock[id]'
              },
              input: {
                balise: 'input',
                id: 'stock_quantite',
                value: donnees['stock']['quantite'],
                type_input: 'text',
                name: 'stock[quantite]',
                "class": 'numerical optional'
              },
              link: {
                "class": 'update_quantite',
                text: 'Modifier la quantité du stock'
              },
              span_infos: {
                text: '(' + donnees['unite_mesure']['nom'] + ' '
              }
            };
            card.generate_form(attribut);
            return window.light_box_information.show();
        }
      },
      get_information: function(id_stock) {
        var user_id;
        user_id = $('input.user_id').val();
        return $.ajax({
          type: 'GET',
          url: '/administration/users/' + user_id + '/stocks/' + id_stock,
          format: 'json',
          success: function(data) {
            return data;
          }
        });
      },
      generate_form: function(attribut) {
        var a, champ, hidden_input, input, span, span_annuler, span_infos, valeur, _ref;
        hidden_input = $(document.createElement(attribut['hidden_input']['balise']));
        hidden_input.attr('id', attribut['hidden_input']['id']);
        hidden_input.attr('name', attribut['hidden_input']['name']);
        hidden_input.val(attribut['hidden_input']['value']);
        hidden_input.attr('type', attribut['hidden_input']['type_input']);
        hidden_input.addClass(attribut['hidden_input']['class']);
        input = $(document.createElement(attribut['input']['balise']));
        input.attr('id', attribut['input']['id']);
        input.attr('name', attribut['input']['name']);
        input.val(attribut['input']['value']);
        input.addClass(attribut['input']['class']);
        if (attribut['input']['balise'] === 'input') {
          input.attr('type', attribut['input']['type_input']);
          input.attr('size', attribut['input']['size']);
        } else if (attribut['input']['balise'] === 'textarea') {
          input.attr('cols', attribut['input']['size']);
        } else if (attribut['input']['balise'] === 'select') {
          _ref = attribut['input']['options'];
          for (champ in _ref) {
            valeur = _ref[champ];
            input.append(valeur);
          }
        }
        window.light_box_information.html_content(input);
        window.light_box_information.append_content(hidden_input);
        if (attribut['span_infos']) {
          span_infos = $(document.createElement('span'));
          span_infos.text(attribut['span_infos']['text']);
          window.light_box_information.append_content(span_infos);
        }
        span = $(document.createElement('span'));
        span.addClass('button');
        a = $(document.createElement('a'));
        a.addClass(attribut['link']['class']);
        a.text(attribut['link']['text']);
        span.append(a);
        span_annuler = window.light_box_information.create_annuler();
        window.light_box_information.html_footer(span_annuler);
        window.light_box_information.append_footer(span);
        return span.on('click', function() {
          return card.update_information(this);
        });
      },
      update_information: function(button) {
        var champ, data, id_entite, tab_concerned, url, user_id, val;
        url = '/administration/users/7/stocks/4';
        user_id = $('input.user_id').val();
        tab_concerned = $(button).parent('.footer').prev('.content').children('input[type="hidden"]').attr('id').replace('_id', '');
        id_entite = $(button).parent('.footer').prev('.content').children('#' + tab_concerned + '_id').val();
        champ = $(button).parent('.footer').prev('.content').children().first().attr('id').replace(tab_concerned + '_', '');
        val = $(button).parent('.footer').prev('.content').children().first().val();
        data = {};
        data[tab_concerned] = {};
        data[tab_concerned][champ] = val;
        console.log($(button).parent('.footer').prev('.content').children('input[type="hidden"]'));
        return $.ajax({
          type: 'PUT',
          url: '/administration/users/' + user_id + '/' + tab_concerned + 's/' + id_entite,
          data: data,
          format: 'json',
          success: function(data) {
            return data;
          }
        });
      }
    };
    return card.event();
  });

}).call(this);
